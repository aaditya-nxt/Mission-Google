class Solution {
    public boolean wordBreak(String s, List<String> wordDict) {
        HashSet<String> set = new HashSet<String>();
        HashSet<String> noSet = new HashSet<String>();
        for(int i = 0; i < wordDict.size(); i++) {
            set.add(wordDict.get(i));
        }
        return wordBreakStr(s, set, noSet);
    }
    
    public boolean wordBreakStr(String s, HashSet<String> set, HashSet<String> noSet) {
        if(s.length() == 0)
            return true;
        if(noSet.contains(s))
            return false;
        for(int i = 0; i < s.length(); i++) {
            if(set.contains(s.substring(0, i+1)) && wordBreakStr(s.substring(i+1, s.length()), set, noSet)) {
                set.add(s);
                return true;
            }
        }
        noSet.add(s);
        return false;
    }
}
